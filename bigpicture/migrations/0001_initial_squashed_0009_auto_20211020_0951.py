# Generated by Django 3.2.16 on 2022-11-25 05:23

import bigpicture.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('bigpicture', '0001_initial'), ('bigpicture', '0002_auto_20200709_1224'), ('bigpicture', '0003_auto_20200720_0904'), ('bigpicture', '0004_auto_20200722_1413'), ('bigpicture', '0005_auto_20200806_0834'), ('bigpicture', '0005_auto_20200727_0926'), ('bigpicture', '0006_merge_20200806_0944'), ('bigpicture', '0007_auto_20200819_1037'), ('bigpicture', '0008_auto_20210122_1218'), ('bigpicture', '0009_auto_20211020_0951')]

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dependency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('object_id', models.PositiveIntegerField(help_text='The primary key of the target object.')),
                ('category', models.CharField(choices=[('Workload', 'Workload'), ('Service', 'Service'), ('Compute', 'Compute'), ('Storage', 'Storage'), ('Proxy target', 'Proxy target')], help_text='The category of this dependency.', max_length=64)),
                ('content_type', models.ForeignKey(help_text='The type of the target object.', limit_choices_to=bigpicture.models.limit_dependency_content_type_choices, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('name', models.TextField(blank=True, editable=False, help_text='String representation value of the content object, for querying')),
            ],
            options={
                'verbose_name_plural': 'dependencies',
                'unique_together': {('content_type', 'object_id', 'category')},
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='A unique name for this platform.', max_length=256, unique=True)),
                ('tier', models.CharField(choices=[('IaaS', 'IaaS'), ('PaaS', 'PaaS'), ('SaaS', 'SaaS'), ('Standalone', 'Standalone')], help_text='The platform tier.', max_length=64)),
                ('health', models.CharField(choices=[('Recommended', 'Recommended'), ('Supported', 'Supported'), ('Constrained', 'Constrained'), ('High risk', 'High risk')], help_text='A point-in-time assessment of the health of this platform dependency.', max_length=64)),
                ('dependencies', models.ManyToManyField(blank=True, help_text='Dependencies that make up this platform.', to='bigpicture.Dependency')),
            ],
        ),
        migrations.CreateModel(
            name='RiskAssessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('object_id', models.PositiveIntegerField(help_text='The primary key of the target object.')),
                ('category', models.CharField(choices=[('Infrastructure location', 'Infrastructure location'), ('Critical function', 'Critical function'), ('Traffic', 'Traffic'), ('Access', 'Access'), ('Backups', 'Backups'), ('Support', 'Support'), ('Operating System', 'Operating System'), ('Vulnerability', 'Vulnerability'), ('Contingency plan', 'Contingency plan')], help_text='The category which this risk falls into.', max_length=64)),
                ('rating', models.PositiveIntegerField(help_text='An arbitrary number rating for the risk (higher equals greater risk).')),
                ('notes', models.TextField(blank=True, help_text='Supporting evidence and/or context for this risk assessment.')),
                ('content_type', models.ForeignKey(help_text='The type of the target object.', limit_choices_to=bigpicture.models.limit_risk_assessment_content_type_choices, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'unique_together': {('category', 'content_type', 'object_id')},
            },
        ),
    ]
